{"version":3,"sources":["./src/app/ticketing/ticketing.module.ts","./src/app/ticketing/ticketing-routing.module.ts","./src/app/shared/shared.module.ts","./src/app/ticketing/ticket-details/ticket-details.component.ts","./src/app/ticketing/ticket-details/ticket-details.component.html","./src/app/ticketing/ticketing.component.ts","./src/app/ticketing/ticketing.component.html"],"names":[],"mappings":"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","file":"ticketing-ticketing-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\n\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TicketDetailsComponent } from './ticket-details/ticket-details.component';\r\nimport { TicketingRoutingModule } from './ticketing-routing.module';\r\nimport { TicketingComponent } from './ticketing.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TicketingComponent, \r\n        TicketDetailsComponent, \r\n    ],\r\n    imports:[\r\n        SharedModule,\r\n        TicketingRoutingModule\r\n    ],\r\n    exports: [],\r\n    entryComponents: [TicketingComponent]\r\n})\r\nexport class TicketingModule {}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TicketDetailsComponent } from './ticket-details/ticket-details.component';\r\nimport { TicketingComponent } from './ticketing.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: TicketingComponent },\r\n    { path: 'ticket-details/:id', component: TicketDetailsComponent }\r\n]\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class TicketingRoutingModule {}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MaterialModule } from '../material.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n  ]\r\n})\r\nexport class SharedModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BackendService } from 'src/app/backend.service';\nimport { Ticket } from 'src/interfaces/ticket.interface';\nimport { User } from 'src/interfaces/user.interface';\n\n@Component({\n  selector: 'app-ticket-details',\n  templateUrl: './ticket-details.component.html',\n  styleUrls: ['./ticket-details.component.css']\n})\nexport class TicketDetailsComponent implements OnInit {\n\n  ticket: Ticket;\n  user: User;\n  loading = true;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private backendService: BackendService\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n\t\t\tconst id = params.id;\n\t\t\tif (typeof (id) !== 'undefined' && id != \"\") {\n        this.backendService.ticket(id).subscribe(res => {\n          this.ticket = res;\n          this.backendService.user(this.ticket.assigneeId).subscribe(user => {\n            this.user = user;\n            this.loading = false;\n          });\n\n        })\n\n      }\n    })\n  }\n\n}\n","<mat-card>\n    <mat-spinner *ngIf=\"loading\"></mat-spinner>\n    <div *ngIf=\"ticket && user\">\n        <h2> Ticket N° {{ ticket.id }}</h2>\n        <h1> Description : {{ ticket.description }}</h1>\n        <h3 *ngIf=\"user\"> Pour : {{ user.name }}</h3>\n    </div>\n\n    <button mat-raised-button color=\"primary\" routerLink=\"/\" class=\"mt-40\"  matTooltip=\"Go back\">\n         <i class=\"material-icons\">arrow_back_ios</i>  Back\n    </button>\n</mat-card>","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { Ticket } from \"src/interfaces/ticket.interface\";\nimport { User } from \"src/interfaces/user.interface\";\nimport { BackendService } from \"../backend.service\";\nimport {\n  CdkDragDrop,\n  moveItemInArray,\n  transferArrayItem,\n} from \"@angular/cdk/drag-drop\";\nimport { map } from \"rxjs/operators\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: \"app-ticketing\",\n  templateUrl: \"./ticketing.component.html\",\n  styleUrls: [\"./ticketing.component.css\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TicketingComponent implements OnInit {\n  public readonly users$: Observable<User[]> = this.backendService.users();\n  public readonly tickets$: Observable<\n    Ticket[]\n  > = this.backendService.tickets();\n\n  TicketsSubscription: Subscription;\n  ticketsDone: Ticket[] = [];\n  ticketsProgress: Ticket[] = [];\n  tickets: Ticket[] = [];\n  ticketForm: FormGroup;\n  listUser: User[];\n  showAdd = false;\n  loading = true;\n  hasFormErrors = false;\n  maxId = 0;\n\n  constructor(\n    private readonly backendService: BackendService,\n    private ticketFB: FormBuilder,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.createForm();\n    this.refreshTickets();\n  }\n\n  refreshTickets() {\n    this.TicketsSubscription = this.tickets$.subscribe((res) => {\n      this.tickets = res;\n      res.map((ticket) => {\n        if (this.maxId < ticket.id) {\n          this.maxId = ticket.id;\n        }\n        if (ticket.completed) {\n          this.ticketsDone.push(ticket);\n        } else {\n          this.ticketsProgress.push(ticket);\n        }\n      });\n      this.loading = false;\n      console.log(++this.maxId)\n    });\n  }\n\n  createForm() {\n    this.ticketForm = this.ticketFB.group({\n      description: new FormControl(\"\", Validators.required),\n      user: new FormControl(\"\", Validators.required),\n    });\n    this.backendService.users().subscribe((res) => {\n      this.listUser = res;\n    });\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n\n      let ticketID = event.container.data[event.currentIndex][\"id\"];\n      var index = this.tickets.map((o) => o.id).indexOf(ticketID);\n      this.tickets[index].completed = !this.tickets[index].completed;\n      /* if(this.tickets[index].completed){\n        this.backendService.complete(this.tickets[index].id, this.tickets[index].completed).subscribe(res=> {\n        })\n      } */\n      this.openSnackBar('Ticket Updated', 'OK')\n    }\n  }\n\n  addTicket() {\n    this.loading = true;\n    this.hasFormErrors = false;\n    const controls = this.ticketForm.controls;\n    /** check form */\n    if (this.ticketForm.invalid) {\n      Object.keys(controls).forEach((controlName) =>\n        controls[controlName].markAsTouched()\n      );\n      this.hasFormErrors = true;\n      return;\n    }\n\n    let ticket = {\n      description: controls.description.value,\n      user: controls.user.value,\n      lastId: ++this.maxId,\n    };\n\n    this.backendService.newTicket(ticket).subscribe((res) => {\n      console.log(res);\n      this.ticketsProgress.push(res);\n      this.ticketForm.reset();\n      this.loading = false;\n    });\n  }\n\n  detailsTicket(id_ticket) {\n    this.router.navigate([\"./ticket-details/\" + id_ticket], {\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  updateTicket(idTicket, userId){\n    this.backendService.assign(idTicket, userId).subscribe(res => {\n      this.openSnackBar('Ticket Updated', 'OK')\n    })\n  }\n\n  changeUser(idUser){\n    \n    \n    let filtredProgressList = [];\n    let filtredDoneList = [];\n\n    this.tickets.map(ticket => {\n      if(ticket.assigneeId === idUser){\n        if(ticket.completed){\n          filtredDoneList.push(ticket);\n        }else{\n          filtredProgressList.push(ticket);\n        }\n      }\n    });\n\n    this.ticketsProgress = filtredProgressList;\n    this.ticketsDone = filtredDoneList;\n    \n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.TicketsSubscription) {\n      this.TicketsSubscription.unsubscribe();\n    }\n  }\n}\n","<h1>Tickets</h1>\n<button mat-raised-button color=\"primary\" class=\"mt-40\" (click)=\"showAdd = !showAdd\" matTooltip=\"Ajouter Ticket\">\n    Ajouter Ticket <i class=\"material-icons\">add_circle_outline</i>\n</button>\n<br><br>\n<mat-card *ngIf=\"listUser && showAdd\">\n    <form [formGroup]=\"ticketForm\" class=\"form\">\n        <mat-form-field class=\"mat-form-field-fluid\">\n            <input matInput placeholder=\"Description\" formControlName=\"description\">\n            <mat-error>\n                Description\n                <strong>obligatoire</strong>\n            </mat-error>\n            <mat-hint align=\"start\">Veuillez remplir la\n                <strong>Description</strong>\n            </mat-hint>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Utilisateur</mat-label>\n            <mat-select formControlName=\"user\">\n                <mat-option *ngFor=\"let user of listUser\" [value]=\"user.id\">{{ user.name }}</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" class=\"ml-3\" (click)=\"addTicket()\"\n            [disabled]=\"loading || ticketForm.invalid\">Enregistrer</button>\n    </form>\n</mat-card>\n\n<mat-card>\n\n    <mat-card-header>\n        <mat-card-title>Liste des tickets (Drag & Drop to change status)</mat-card-title>\n    </mat-card-header>\n    <mat-spinner *ngIf=\"loading\"></mat-spinner>\n    <br>\n    <mat-card-content>\n        <div class=\"col-md-4\" *ngIf=\"listUser\">\n            <mat-form-field>\n                <mat-label>Filtrer par Utilisateur </mat-label>\n                <mat-select (selectionChange)=\"changeUser($event.value)\">\n                    <mat-option *ngFor=\"let user of listUser\" [value]=\"user.id\"> {{ user.name }} </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <div cdkDropListGroup *ngIf=\"!loading\">\n            <div class=\"example-container\">\n                <h2>To do</h2>\n                <div cdkDropList [cdkDropListData]=\"ticketsProgress\" class=\"example-list\"\n                    (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"example-box\" *ngFor=\"let ticket of ticketsProgress\" cdkDrag>\n                        <div *ngIf='!ticket.completed'>\n                            Ticket: {{ ticket.id }}, {{ticket.description}}\n                            <button mat-icon-button matTooltip=\"Détails\">\n                                <i class=\"material-icons\" (click)=\"detailsTicket(ticket.id)\">info</i>\n                            </button>\n                            <div>\n                                <mat-form-field>\n                                    <mat-label>Assign To</mat-label>\n                                    <mat-select [(value)]=\"ticket.assigneeId\"\n                                        (selectionChange)=\"updateTicket(ticket.id, $event.value)\">\n                                        <mat-option *ngFor=\"let user of listUser\" [value]=\"user.id\">{{ user.name }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"example-container\">\n                <h2>Done</h2>\n                <div cdkDropList [cdkDropListData]=\"ticketsDone\" class=\"example-list\"\n                    (cdkDropListDropped)=\"drop($event)\">\n                    <div class=\"example-box\" *ngFor=\"let ticket of ticketsDone\" cdkDrag>\n                        <div *ngIf='ticket.completed'>\n                            Ticket: {{ ticket.id }}, {{ticket.description}}\n                            <button mat-icon-button matTooltip=\"Détails\" routerLink=\"/ticket-details\">\n                                <i class=\"material-icons\" (click)=\"detailsTicket(ticket.id)\">info</i>\n                            </button>\n                            <mat-form-field>\n                                <mat-label>Assign To</mat-label>\n                                <mat-select [(value)]=\"ticket.assigneeId\"\n                                    (selectionChange)=\"updateTicket(ticket.id, $event.value)\">\n                                    <mat-option *ngFor=\"let user of listUser\" [value]=\"user.id\">{{ user.name }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-card-content>\n</mat-card>"],"sourceRoot":"webpack:///"}